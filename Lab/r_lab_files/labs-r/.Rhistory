getws()
getwd()
setwd("C:/Users/Sahitya/Documents/R")
getwd()
C:/Users/Sahitya/Documents/R .Rhistory
c:/Users/Sahitya/Documents/R .Rhistory
c:\Users\Sahitya\Documents\R .Rhistory
cd R
.Rhistory
cd C:\Users\Sahitya\Documents\R
.Rhistory
install.packages("RJDBC")
library90
library()
q
help (package = 'base')
demo (graphics::graphics)
search()
require(stringr)
help(package='stringr')
?data.frame
??histogram
ls()
a <- 5
ls()
print(a)
paste(a)
a
getwd()
setwd("labs-r")
setwd("Lab")
getwd()
setwd("labs-r")
setwd("r_lab_files")
getwd()
setwd("labs-r")
getwd()
dir()
source("lab1_ex1_internet_IBM_stock_calendar_heat.R", echo=T)
install.packages("makeR")
install.packages("makeR")
install.packages("C:/Users/Sahitya/Downloads/makeR_1.0.2.tar.gz", repos = NULL, type = "source")
install.packages("makeR")
install.packages("C:/Users/Sahitya/Downloads/makeR_1.0.1.tar.gz", repos = NULL, type = "source")
install.packages(c("reshape2", "scales", "slam"))
source("lab_ex1_huron.R")
ls()
dir()
source("lab1_ex1_huron.R")
quit()
diff <- maxLevel-minLevel
huron <- read.csv("C:/Users/Sahitya/Documents/R/Lab/r_lab_files/datasets/Huron_water_levels/huronLevel.csv")
huron$Date <- as.Date(huron$Date,"%m/%d/%Y")
str(huron)
# Display a few rows
head(huron)
# Create a Line Plot
plot(huron$Date,huron$Level,type="l",xlab="Year",ylab="Height (m)", main="Lake Huron - Daily Water Levels")
# Find the maximum and minimum water levels for the entire data set
minLevel <- min(huron$Level)
maxLevel <- max(huron$Level)
diff <- maxLevel-minLevel
low.levels <- with(huron,abs(huron$Level-minLevel) < (.05 * diff))
high.levels <- with(huron,abs(huron$Level-maxLevel) < (.05* diff))
# Find the days within 5% of the range of lake levels
years.low <- subset(huron,low.levels)
# Find the days within 5% of the range of lake levels
years.high <- subset(huron,high.levels)
# Display analysis
sprintf("There are %d days of low lake levels.", nrow(years.low))
print("The days are:")
print (years.low$Date)
# Display analysis
sprintf("There are %d days of high lake levels.", nrow(years.high))
print("The days are:")
print (years.high$Date)
